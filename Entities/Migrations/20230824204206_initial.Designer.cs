// <auto-generated />
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20230824204206_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("BurgerIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStoreOpen")
                        .HasColumnType("bit");

                    b.Property<string>("StoreLocation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StorePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores", (string)null);

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            BurgerIds = "burgerIds=1&burgerIds=2&burgerIds=3",
                            IsStoreOpen = true,
                            StoreLocation = "Athens",
                            StoreName = "BestBurger",
                            StorePhoneNumber = "1234567890"
                        },
                        new
                        {
                            StoreId = 2,
                            BurgerIds = "burgerIds=2&burgerIds=3&burgerIds=4",
                            IsStoreOpen = true,
                            StoreLocation = "Mexico",
                            StoreName = "Amigos",
                            StorePhoneNumber = "1234567890"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
